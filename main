<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Spirit Veggie Test</title>
  <link href="https://fonts.googleapis.com/css2?family=Fredoka&family=Poppins&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #fdf6e3;
      color: #333;
      padding: 2rem;
    }
    .container {
      max-width: 600px;
      margin: 0 auto;
    }
    h1 {
      font-family: 'Fredoka', sans-serif;
      text-align: center;
    }
    .question {
      margin-bottom: 2rem;
    }
    .options button {
      display: block;
      width: 100%;
      margin: 0.5rem 0;
      padding: 1rem;
      background-color: #c3f73a;
      border: none;
      border-radius: 12px;
      cursor: pointer;
      font-size: 1rem;
    }
    #result {
      display: none;
      background: #ffffffaa;
      padding: 2rem;
      border-radius: 12px;
      margin-top: 2rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Which Spirit Veggie Guides You?</h1>
    <div id="quiz"></div>
    <div id="result"></div>
  </div>
  <script>
    const spiritVeggies = {
      'Kroot': {
        name: 'Kroot',
        personality: 'Tsundere grounding. Sok cuek, padahal peduli.',
        ability: 'Membantu kamu tetap kokoh saat terombang-ambing.',
        for: 'Kamu yang mudah goyah saat masalah datang.',
        grounding: 'Potatoad',
        enemy: 'Toxic Doubt'
      },
      'Banion': {
        name: 'Banion',
        personality: 'Suka usil, tapi tujuannya supaya kamu bisa nangis dan lega.',
        ability: 'Menyeimbangkan emosimu lewat pelepasan air mata.',
        for: 'Kamu yang sering memendam rasa.',
        grounding: 'Mubii',
        enemy: 'Toxic Positivity'
      },
      'Potatoad': {
        name: 'Potatoad',
        personality: 'Gemes, kalem, reminder hidup santai.',
        ability: 'Mengajarkan pentingnya istirahat dan tidak overwork.',
        for: 'Kamu yang selalu merasa harus produktif.',
        grounding: 'Onyun',
        enemy: 'Overachievement Pressure'
      },
      'Mubii': {
        name: 'Mubii',
        personality: 'Pendiam tapi bijak. Menjaga batas energi.',
        ability: 'Menangkal energi negatif dari toxic people.',
        for: 'Kamu yang gampang kecapekan karena sekitar.',
        grounding: 'Banion',
        enemy: 'Energi Toxic Sosial'
      },
      'Onyun': {
        name: 'Onyun',
        personality: 'Ceria tapi intuitif. Kayak anjing bawang yang bisa baca suasana.',
        ability: 'Mendeteksi sinyal bahaya dari lingkungan.',
        for: 'Kamu yang sering kebanyakan mikir dan lupa realita.',
        grounding: 'Jinger',
        enemy: 'Overthinking Fog'
      },
      'Bitty': {
        name: 'Bitty',
        personality: 'Cerewet tapi jujur. Kayak burung kecil tukang curhat.',
        ability: 'Menolongmu mengeluarkan suara hati kecil.',
        for: 'Kamu yang suka pura-pura kuat.',
        grounding: 'Banion',
        enemy: 'Silent Suppression'
      },
      'Jinger': {
        name: 'Jinger',
        personality: 'Lemah lembut tapi punya insting kuat. Kayak rusa yang peka.',
        ability: 'Menghangatkan pikiran dingin dengan ketenangan batin.',
        for: 'Kamu yang merasa lost dan dingin dalam batin.',
        grounding: 'Kroot',
        enemy: 'Inner Winter'
      },
    }

    const questions = [
      {
        q: "Kamu merasa paling berat saat...",
        o: ['Gak tau harus percaya siapa', 'Gak boleh nangis terus', 'Gak bisa stop kerja', 'Orang-orang nyedot energiku']
      },
      {
        q: "Kalau lagi galau, kamu cenderung...",
        o: ['Menghilang dari semuanya', 'Nonton film biar nangis', 'Cari kerjaan biar lupa', 'Merenung sendirian']
      },
      {
        q: "Satu kata yang menggambarkan kamu:",
        o: ['Goyah', 'Pekewuh', 'Overwork', 'Sensi']
      },
      {
        q: "Temen bilang kamu kayak...",
        o: ['Batu', 'Drama', 'Robot', 'Sponge']
      },
      {
        q: "Kamu sering disuruh...",
        o: ['Tenangin diri', 'Gausah baper', 'Jangan kerja mulu', 'Gausah terlalu mikir']
      },
      {
        q: "Kamu paling takut jadi orang yang...",
        o: ['Gampang dipengaruhi', 'Cengeng', 'Gak produktif', 'Kelewat sensitif']
      },
      {
        q: "Emosi yang paling sering kamu tahan:",
        o: ['Takut', 'Sedih', 'Capek', 'Marah']
      },
      {
        q: "Apa yang paling bikin kamu lelah?",
        o: ['Ketidakpastian hidup', 'Tekanan emosional', 'Kewajiban nonstop', 'Lingkungan yang penuh drama']
      },
      {
        q: "Kamu lebih milih siapa jadi temanmu?",
        o: ['Yang bisa diandalkan saat chaos', 'Yang bikin lega tiap ketemu', 'Yang ngajak healing mulu', 'Yang kalem dan gak cerewet']
      },
      {
        q: "Kamu gak suka orang yang...",
        o: ['Terlalu banyak omong', 'Nangis mulu', 'Santai banget', 'Drama queen']
      },
      {
        q: "Gaya kamu waktu healing...",
        o: ['Menata ulang jadwal', 'Curhat + nangis', 'Turu', 'Detox sosmed']
      },
      {
        q: "Kalau ditinggal sendiri kamu...",
        o: ['Cemas', 'Nangis', 'Produktif', 'Nyaman']
      },
      {
        q: "Salah satu pelajaran terberat...",
        o: ['Mempercayai proses', 'Menerima rasa sakit', 'Belajar berhenti', 'Menjaga diri sendiri']
      },
      {
        q: "Apa yang paling kamu pengen punya saat ini?",
        o: ['Keyakinan diri', 'Pelukan hangat', 'Waktu kosong', 'Energi stabil']
      },
      {
        q: "Kalau kamu adalah hewan...",
        o: ['Kura-kura', 'Koala', 'Semut', 'Kucing']
      },
      {
        q: "Saat semuanya chaos, kamu butuh...",
        o: ['Grounding', 'Menangis', 'Tidur', 'Detox']
      }
    ];

    const resultCounter = {
      Kroot: 0,
      Banion: 0,
      Potatoad: 0,
      Mubii: 0,
      Onyun: 0,
      Bitty: 0,
      Jinger: 0
    };

    const answerMap = ['Kroot', 'Banion', 'Potatoad', 'Mubii'];

    let current = 0;
    const quizDiv = document.getElementById('quiz');
    const resultDiv = document.getElementById('result');

    function renderQuestion() {
      if (current >= questions.length) return showResult();

      const q = questions[current];
      quizDiv.innerHTML = `
        <div class="question">
          <h2>${q.q}</h2>
          <div class="options">
            ${q.o.map((opt, i) => `<button onclick="select(${i})">${opt}</button>`).join('')}
          </div>
        </div>
      `;
    }

    function select(i) {
      const spirit = answerMap[i];
      resultCounter[spirit] += 1;
      current++;
      renderQuestion();
    }

    function showResult() {
      const topSpirit = Object.keys(resultCounter).reduce((a, b) => resultCounter[a] > resultCounter[b] ? a : b);
      const s = spiritVeggies[topSpirit];
      quizDiv.innerHTML = '';
      resultDiv.innerHTML = `
        <h2>Spirit Veggie kamu adalah: ${s.name} ðŸŒ±</h2>
        <p><strong>Personality:</strong> ${s.personality}</p>
        <p><strong>Ability:</strong> ${s.ability}</p>
        <p><strong>Cocok untuk:</strong> ${s.for}</p>
        <p><strong>Grounding Friend:</strong> ${s.grounding}</p>
        <p><strong>Enemies Spirit:</strong> ${s.enemy}</p>
      `;
      resultDiv.style.display = 'block';
    }

    renderQuestion();
  </script>
</body>
</html>

    renderQuestion();
  </script>
</body>
</html>
